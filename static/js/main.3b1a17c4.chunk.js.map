{"version":3,"sources":["utils/socket.js","utils/sound.mp3","utils/altImg.jpg","data-providers/connectionProvider/connectionProvider.js","LogIn.js","CurrentUser.js","OtherUsers.js","OnlineUsers.js","customHooks/useScroll.js","customHooks/useStyle.js","NewMessage.js","OldMessages.js","Message.js","Notification.js","MessageDisplay.js","TypeMessage.js","ChatBox.js","ChatApp.js","Security.js","App.js","index.js"],"names":["socket","io","connectionContext","React","createContext","connected","setConnected","messages","setMessages","users","setUsers","sendMessage","userInit","userName","setUserName","userData","setUserData","typingStatus","setTypingStatus","ContextProvider","children","useState","useCallback","message","user","type","imgUrl","emit","name","image","altImg","id","isTyping","status","typeMessage","updateMessage","oldMessages","newMessage","useEffect","on","Audio","kickSoundUrl","play","usersOnline","off","value","useMemo","Provider","LogIn","useContext","setValue","setImgUrl","className","onSubmit","e","preventDefault","trim","length","style","backgroundImage","onChange","file","target","files","reader","FileReader","readAsDataURL","onload","result","for","placeholder","CurrentUser","OtherUsers","Object","keys","map","uid","index","width","height","borderRadius","src","alt","OnlineUsers","useScroll","nodeRef","current","scrollIntoView","behavior","useStyle","me","backgroundColor","color","order","notme","NewMessage","state","setState","useRef","CSSTransition","in","timeout","unmountOnExit","classNames","ref","OldMessages","Message","msg","ind","lastInd","handleAlignRef","alignSelf","Notification","notiRef","MessageDisplay","TypeMessage","setNewMessage","textInput","clearStatus","typingStatusRef","focus","clearTimeout","onKeyUp","setTimeout","autoFocus","path","mdiSend","title","size","ChatBox","ChatApp","Security","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3b1a17c4.chunk.js","sourcesContent":["import { io } from \"socket.io-client\";\nexport const socket = io(\"https://chatxapp.herokuapp.com/\");","export default __webpack_public_path__ + \"static/media/sound.9287f5ce.mp3\";","export default __webpack_public_path__ + \"static/media/altImg.8d7f1054.jpg\";","import React, { useEffect, useState, useMemo, useCallback } from \"react\";\nimport { socket } from \"../../utils/socket\";\nimport kickSoundUrl from \"../../utils/sound.mp3\";\nimport altImg from \"../../utils/altImg.jpg\";\n\nexport const connectionContext = React.createContext({\n  connected: false,\n  setConnected: () => {},\n  messages: [],\n  setMessages: () => {},\n  users: [],\n  setUsers: () => {},\n  sendMessage: () => {},\n  userInit: () => {},\n  userName: null,\n  setUserName: () => {},\n  userData: {},\n  setUserData: () => {},\n  typingStatus: false,\n  setTypingStatus: () => {},\n});\n\nexport function ContextProvider({ children }) {\n  const [connected, setConnected] = useState(false);\n  const [messages, setMessages] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [userName, setUserName] = useState(null);\n  const [userData, setUserData] = useState({});\n  const [typingStatus, setTypingStatus] = useState(false);\n\n  const sendMessage = useCallback(\n    (message) => {\n      setMessages([...messages, { user: \"me\", type: \"chat-message\", message, imgUrl:userData.imgUrl  }]);\n      socket.emit(\"send-message\", {\n        user: userName,\n        message,\n        type: \"chat-message\",\n        imgUrl:userData.imgUrl\n      });\n    },\n    [messages, userData.imgUrl, userName]\n  );\n\n  const userInit = useCallback((name, image) => {\n    const imgUrl = image === \"\" ? altImg : image;\n    setUserName(name);\n    setUserData({ name, imgUrl, id: socket.id });\n    socket.emit(\"user-init\", {\n      user: name,\n      imgUrl,\n      message: \" is online\",\n      type: \"online\",\n    });\n  }, []);\n\n  const isTyping = useCallback(\n    (status) => {\n      const typeMessage = status ? `${userName} is Typing...` : \"\";\n      socket.emit(\"typing-user\", {\n        message: typeMessage,\n        type: \"typing\",\n      });\n    },\n    [userName]\n  );\n\n  const updateMessage = useCallback((oldMessages, newMessage) => {\n    setMessages([...oldMessages, newMessage]);\n  }, []);\n\n  useEffect(() => {\n    socket.on(\"connect\", () => {\n      setConnected(true);\n    });\n\n    socket.on(\"user-init\", (message) => {\n      updateMessage(messages, message);\n    });\n\n    socket.on(\"user-exit\", (message) => {\n      message.message = \" is offline\";\n      message.type = \"user-exit\";\n      updateMessage(messages, message);\n    });\n\n    socket.on(\"send-message\", (message) => {\n      const audio = new Audio(kickSoundUrl);\n      audio.play();\n      updateMessage(messages, message);\n    });\n\n    socket.on(\"online-users\", (usersOnline) => {\n      setUsers(usersOnline);\n    });\n\n    socket.on(\"typing-user\", (message) => {\n      setTypingStatus(message);\n    });\n\n    return () => {\n      socket.off(\"connect\");\n      socket.off(\"user-init\");\n      socket.off(\"send-message\");\n      socket.off(\"user-exit\");\n      socket.off(\"online-users\");\n      socket.off(\"typing-user\");\n    };\n  }, [messages, updateMessage]);\n\n  const value = useMemo(() => {\n    return {\n      connected,\n      messages,\n      users,\n      sendMessage,\n      userName,\n      setUserName,\n      userInit,\n      typingStatus,\n      setTypingStatus,\n      isTyping,\n      userData,\n    };\n  }, [\n    connected,\n    messages,\n    users,\n    sendMessage,\n    userName,\n    userInit,\n    typingStatus,\n    isTyping,\n    userData,\n  ]);\n\n  return (\n    <connectionContext.Provider value={value}>\n      {children}\n    </connectionContext.Provider>\n  );\n}\n\n// when login tab is open, connection has been made already.\n// and messages can be received even if the user hasn't logged in yet.\n// or the socket has no name yet.\n// Test !: try opening different tabs all at log in page, log in one after the other\n// Test: 2try opening a tab, log in, then open another tab, login\n\n// in all cases - even though connected, to alert that you are online, submit a user name\n// fix you can disable reception of messages untill user name is defined.\n","import { useState, useContext } from \"react\";\nimport { connectionContext } from \"./data-providers/connectionProvider/connectionProvider\";\nimport altImg from \"./utils/altImg.jpg\";\nimport \"./App.css\";\nimport \"./LogIn.css\";\n\nfunction LogIn() {\n  const { userInit } = useContext(connectionContext);\n  const [value, setValue] = useState(\"\");\n  const [imgUrl, setImgUrl] = useState(altImg);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (value.trim().length > 0) {\n      userInit(value.trim(), imgUrl);\n    }\n  };\n\n  const handleChange = (e) => {\n    setValue(e.target.value);\n  };\n\n  const handleUpload = (e) => {\n    const file = e.target.files[0];\n    if (file != null) {\n      const reader = new FileReader();\n      reader.readAsDataURL(file);\n      reader.onload = () => {\n        setImgUrl(reader.result);\n      };\n    }\n  };\n  return (\n    <form className=\"login-form\" onSubmit={handleSubmit}>\n      <div className=\"image-uploader\">\n        <div className=\"image\" style={{backgroundImage:`url(\"${imgUrl}\")`}}></div>\n        <div className=\"choose-file\">\n          <input id=\"img\" type=\"file\" onChange={handleUpload} />\n          <label className=\"file-upload\" for=\"img\">\n            upload image\n          </label>\n        </div>\n      </div>\n\n      <input placeholder=\"Choose a username\" type=\"text\" onChange={handleChange} />\n      <button>submit</button>\n    </form>\n  );\n}\n\nexport default LogIn;\n","import { useContext } from \"react\";\nimport { connectionContext } from \"./data-providers/connectionProvider/connectionProvider\";\nimport \"./CurrentUser.css\";\n\nexport default function CurrentUser() {\n  const { userData } = useContext(connectionContext);\n  return (\n    <div className=\"cur-user-sect\">\n      <div\n        className=\"image\"\n        style={{ backgroundImage: `url(\"${userData.imgUrl}\")` }}\n      />\n      <div className=\"cur-user-name\">\n        <span>{userData.name}</span>\n      </div>\n    </div>\n  );\n}\n","import { connectionContext } from \"./data-providers/connectionProvider/connectionProvider\";\nimport { useContext } from \"react\";\nimport \"./OtherUsers.css\";\n\nexport default function OtherUsers() {\n  const { users, userData } = useContext(connectionContext);\n  const { id } = userData;\n  return (\n    <div className=\"hold-other-users\">\n      {Object.keys(users).map((uid, index) =>\n        uid !== id ? (\n          <div key={index} className=\"other-user\">\n            <img\n              style={{ width: \"40px\", height: \"40px\", borderRadius: \"50%\" }}\n              src={users[uid].imgUrl}\n              alt=\"\"\n            />\n            <span>{users[uid].name}</span>\n          </div>\n        ) : null\n      )}\n    </div>\n  );\n}\n","import CurrentUser from \"./CurrentUser\";\nimport OtherUsers from \"./OtherUsers\";\nimport \"./OnlineUsers.css\";\nimport { useContext } from \"react\";\nimport { connectionContext } from \"./data-providers/connectionProvider/connectionProvider\";\n\nexport default function OnlineUsers() {\n  const { users } = useContext(connectionContext);\n  return (\n    <div className=\"user-container\">\n      <div className=\"current-user\">\n        <CurrentUser />\n      </div>\n      <div className=\"users-num\">\n        <span>\n          Active users <span id=\"counter\">{Object.keys(users).length}</span>\n        </span>\n      </div>\n      <div className=\"other-users\"><OtherUsers /></div>\n    </div>\n  );\n}\n","import { useEffect } from \"react\";\n\nexport default function useScroll(nodeRef) {\n  useEffect(() => {\n    if (nodeRef.current) {\n      nodeRef.current.scrollIntoView({ behavior: \"smooth\" });\n    }\n  });\n}\n","export default function useStyle(user) {\n  const styleKey = user === \"me\" ? \"me\" : \"notme\";\n  const style = {\n    me: { backgroundColor: \"#1c2439\", color: \"#fff\", order: 1 },\n    notme: { backgroundColor: \"#fff\", color: \"#1c2439\", order: null },\n  };\n\n  return style[styleKey];\n}\n","import React, { useEffect, useRef, useState } from \"react\";\nimport { CSSTransition } from \"react-transition-group\";\nimport \"./NewMessage.css\";\nimport \"./OldMessages.css\";\nimport useScroll from \"./customHooks/useScroll\";\nimport useStyle from \"./customHooks/useStyle\";\n\nexport default function NewMessage({ user, message, imgUrl }) {\n  const [state, setState] = useState(false);\n  const nodeRef = useRef(null);\n  const style = useStyle(user)\n  useScroll(nodeRef);\n\n  useEffect(() => {\n    setState(true);\n  }, []);\n\n  return (\n    <CSSTransition\n      nodeRef={nodeRef}\n      in={state}\n      timeout={500}\n      unmountOnExit\n      classNames=\"last\"\n    >\n      <div ref={nodeRef} className=\"old-msg\">\n        <div className=\"user\" style={{ order: style.order}}>\n          {\" \"}\n          <img\n            style={{ width: \"20px\", height: \"20px\", borderRadius: \"50%\" }}\n            src={imgUrl}\n            alt=\"\"\n          />\n          <span>{user}</span>{\" \"}\n        </div>\n        <div className=\"msg\">\n          <span style={{backgroundColor: style.backgroundColor,\n            color: style.color, }} className=\"message\">{message}</span>\n        </div>\n      </div>\n    </CSSTransition>\n  );\n}\n","import React from \"react\";\nimport useStyle from \"./customHooks/useStyle\";\n\nimport \"./OldMessages.css\";\nexport default function OldMessages({ user, message, imgUrl }) {\n  const style = useStyle(user);\n  return (\n    <div className=\"old-msg\">\n      <div className=\"user\" style={{ order: style.order }}>\n        {\" \"}\n        <img\n          style={{ width: \"20px\", height: \"20px\", borderRadius: \"50%\" }}\n          src={imgUrl}\n          alt=\"\"\n        />\n        <span>{user}</span>{\" \"}\n      </div>\n      <div className=\"msg\">\n        <span\n          style={{\n            backgroundColor: style.backgroundColor,\n            color: style.color,\n          }}\n          className=\"message\"\n        >\n          {message}\n        </span>\n      </div>\n    </div>\n  );\n}\n","import { useRef } from \"react\";\nimport NewMessage from \"./NewMessage\";\nimport OldMessages from \"./OldMessages\";\nexport default function Message({ msg, ind, lastInd }) {\n  const { user, message, imgUrl } = msg;\n  const handleAlignRef = useRef(null);\n  handleAlignRef.current = user === \"me\" ? \"flex-end\" : \"flex-start\";\n\n  return (\n    <div\n      style={{alignSelf: handleAlignRef.current }}\n    >\n      {ind + 1 === lastInd ? (\n        <NewMessage user={user} message={message} imgUrl={imgUrl} />\n      ) : (\n        <OldMessages user={user} message={message}  imgUrl={imgUrl} />\n      )}\n    </div>\n  );\n}\n","import { useRef } from \"react\";\nimport \"./Notification.css\";\nimport useScroll from \"./customHooks/useScroll\";\n\nexport default function Notification({ msg }) {\n  const { user, message } = msg;\n  const notiRef = useRef(null);\n  useScroll(notiRef);\n\n  return (\n    <div ref={notiRef} className=\"notification\">\n      <span>{user}</span>\n      <span>{message}</span>\n    </div>\n  );\n}\n","import { connectionContext } from \"./data-providers/connectionProvider/connectionProvider\";\nimport \"./MessageDisplay.css\";\nimport { useContext } from \"react\";\nimport Message from \"./Message\";\nimport Notification from \"./Notification\";\n\nexport default function MessageDisplay() {\n  const { messages } = useContext(connectionContext);\n\n  return (\n    <div className=\"display-message\">\n      {messages.map((message, index) => (\n        <div className=\"msg-container\" key={index}>\n          {message.type !== \"chat-message\" ? (\n            <Notification msg={message} />\n          ) : (\n            <Message msg={message} ind={index} lastInd={messages.length} />\n          )}\n        </div>\n      ))}\n    </div>\n  );\n}\n","import { connectionContext } from \"./data-providers/connectionProvider/connectionProvider\";\nimport \"./TypeMessage.css\";\nimport React, { useContext, useRef, useState } from \"react\";\nimport Icon from \"@mdi/react\";\nimport { mdiSend } from \"@mdi/js\";\n\nexport default function TypeMessage() {\n  const { sendMessage, isTyping, typingStatus } = useContext(connectionContext);\n  const [newMessage, setNewMessage] = useState(\"\");\n  const textInput = useRef(null);\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    sendMessage(newMessage);\n    setNewMessage(\"\");\n    textInput.current.focus();\n  };\n\n  const handleInput = (e) => {\n    setNewMessage(e.target.value);\n    clearTimeout(clearStatus);\n    isTyping(true);\n  };\n\n  const clearStatus = () => {\n    isTyping(false);\n  };\n\n  const handleKeyup = () => {\n    setTimeout(clearStatus, 2000);\n  };\n\n  const typingStatusRef = useRef();\n  typingStatusRef.current = typingStatus;\n\n  return (\n    <div className=\"type-message\">\n      <form onSubmit={handleSubmit}>\n        <div className=\"hold-indicator\">\n          <span className=\"typing-indicator\">\n            {typingStatusRef.current.message}\n          </span>\n        </div>\n        <div className=\"hold-input-box\">\n          <div className=\"input-background\">\n            <input\n              placeholder=\"Enter your message here\"\n              className=\"input-box\"\n              type=\"text\"\n              value={newMessage}\n              onChange={handleInput}\n              onKeyUp={handleKeyup}\n              ref={textInput}\n              autoFocus\n            />\n            <button id=\"submit-btn\">\n              Send{\" \"}\n              <Icon className=\"sendIcon\"\n                path={mdiSend}\n                title=\"Send\"\n                size={0.6}\n                color=\"white\"\n              />\n            </button>\n          </div>\n        </div>\n      </form>\n    </div>\n  );\n}\n","import \"./ChatBox.css\";\nimport MessageDisplay from \"./MessageDisplay\";\nimport TypeMessage from \"./TypeMessage\";\n\nexport default function ChatBox() {\n  return (\n    <div className=\"chat-box\">\n      <MessageDisplay />\n      <TypeMessage />\n    </div>\n  );\n}\n","import OnlineUsers from \"./OnlineUsers\";\nimport ChatBox from \"./ChatBox\";\nimport \"./ChatApp.css\";\nimport React from \"react\";\n\nexport default function ChatApp() {\n  return (\n    <div className=\"app-container\">\n      <div className=\"users-side\">\n        <OnlineUsers />\n      </div>\n      <div className=\"chat-box-holder\">\n        <ChatBox />\n      </div>\n    </div>\n  );\n}\n","import { useContext } from \"react\";\nimport { connectionContext } from \"./data-providers/connectionProvider/connectionProvider\";\nimport LogIn from \"./LogIn\";\nimport ChatApp from \"./ChatApp\";\n\nexport default function Security() {\n  const { userName } = useContext(connectionContext);\n  return <div>{userName == null ? <LogIn /> : <ChatApp />}</div>;\n}\n","import \"./App.css\";\nimport { ContextProvider } from \"./data-providers/connectionProvider/connectionProvider\";\nimport Security from \"./Security\";\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <ContextProvider>\n        <Security />\n      </ContextProvider>\n      <div>Built by Emeka</div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}